import {
    Grid,
    Typography
} from "@mui/material";

import { IconUrgent, IconChecks } from "@tabler/icons";

import { AvatarListItem } from "ts/interfaces/IAvatarList";

import SubCard from "components/elements/cards/SubCard";
import AvatarList from "components/elements/lists/AvatarList";
import AuthentiticationSlices from "./slices/AuthentificationSlice";

const NPX: React.FC = () => {
    const projetTerminalItems: AvatarListItem[] = [
        {avatar:<IconUrgent color='red'/>, primaryText:'Installer RTK dans votre projet', secondaryText:'√Ä l\'aide de NPM'},
        {avatar:<IconUrgent color='red'/>, primaryText:'Mettre en place le store et la slice pour les √©l√©ments suivant üëá'},
    ];

    const storeItems: AvatarListItem[] = [
        {avatar:<IconChecks color='green'/>, primaryText:'Doit inclure la slice cr√©√©e pr√©c√©dement', secondaryText:'Bien s√ªr üòâ'},
        {avatar:<IconChecks color='green'/>, primaryText:'Cr√©er les types AppDispatch et RootState', secondaryText:'Yup üòâ'},
    ];

    const fonctionnalitesItems: AvatarListItem[] = [
        {
            avatar:'üë§',
            primaryText:'Sur la page d\'authentification, sans valider les informations dans Firebase, si un courriel/nom d\'utilisation et un mot de passe sont fournis, changer la valeure du store \'authentifier\' √† True et la valeur de \'username\' √† celle entr√©e',
            secondaryText:'Assurez-vous cependant que les valeurs ne sont pas vides. Regarder les propri√©t√©s de Textfield de MUI',
            href:'https://mui.com/material-ui/react-text-field/'
        },
        {
            avatar:'‚úã', primaryText:'Restreindre l\'acc√®s √† la page Tableau de bord si la valeur \'Authentifier\' est √† False',
            secondaryText:'On simule un vrai login. Donc s\'il n\'est pas authentifi√©, on le retourne vers la page de connexion',
            href:'https://stackoverflow.com/a/69082743/3753889'
        },
        {
            avatar:<IconChecks color='green'/>, primaryText:'Ajouter \'Bonjour, nomUtilisateur\' au fond √† gauche de l\'App Bar',
            secondaryText:'Utilisez votre slice bien s√ªr. Vous pouvez regard√© l\'App bar de ce site üëá avec l\'ic√¥ne du c√©gep.',
        },
        {
            avatar:'‚ùå', primaryText:'Ajouter un bouton au fond √† droite de l\'App Bar qui permet de terminer la \'session\'',
            secondaryText:'Il change la valeur du store \'Authentifier\' √† False',
        },
    ];

    return (
        <Grid item xs={12} sx={{my:2}}>
            <Grid container spacing={2}>
                <Grid item xs={12}>
                    <SubCard title='Pour la fin de session üóìÔ∏è'>
                        <Typography variant="body1">
                            Voici les √©l√©ments qui devront √™tre fait (sugg√©rer de le finir pour la semaine 13)
                        </Typography>
                        <AvatarList items={projetTerminalItems}/>
                    </SubCard>
                </Grid>

                <Grid item md={6} xs={12}>
                    <SubCard title='Slice Authentification üçï'>
                        <AuthentiticationSlices />
                    </SubCard>
                </Grid>
                <Grid item md={6} xs={12}>
                    <SubCard title='Cr√©er le store üî¥'>
                        <AvatarList items={storeItems}/>
                    </SubCard>
                </Grid>

                <Grid item xs={12}>
                    <SubCard title='Fonctionnalit√©s √† ajouter ‚ûï'>
                        <AvatarList items={fonctionnalitesItems}/>
                    </SubCard>
                </Grid>
            </Grid>
        </Grid>
    );
}


export default NPX;